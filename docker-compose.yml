version: '3.8'

# Common settings for all MinIO containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: ${MINIO_ROOT_USER}
    MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      - minio-net

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      - minio-net

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    networks:
      - minio-net

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    networks:
      - minio-net

  nginx:
    image: nginx:latest
    command: /bin/bash -c "curl -o /etc/nginx/nginx.conf https://raw.githubusercontent.com/devstroop/minio-docker-compose/main/nginx.conf && nginx -g 'daemon off;'"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - minio-net

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: ${CF_TOKEN:?*Tunnel token required!}
    depends_on:
      - nginx
    networks:
      - minio-net
    deploy:
      replicas: ${CF_COUNT:-1}
      restart_policy:
        condition: unless-stopped

networks:
  minio-net:
    driver: bridge

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
